<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.pet</groupId>
  <artifactId>spooch</artifactId>
  <version>1.0-SNAPSHOT</version>
  <properties>
    <maven.compiler.target>11</maven.compiler.target>
    <vertx-maven-plugin.version>1.0.18</vertx-maven-plugin.version>
    <vertx.verticle>io.pet.spooch.Gateway</vertx.verticle>
    <maven.compiler.source>11</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vertx.version>3.6.2</vertx.version>
    <kotlin.version>1.3.20</kotlin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-kotlin</artifactId>
    </dependency>
      <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-lang-kotlin-coroutines</artifactId>
      </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-auth-jwt</artifactId>
    </dependency>
      <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-mysql-postgresql-client</artifactId>
          <version>3.6.3</version>
      </dependency>
   <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-web-api-contract</artifactId>
        <version>3.6.2</version>
   </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>3.11.9</version>
    </dependency>
    <dependency>
      <groupId>io.github.jklingsporn</groupId>
      <artifactId>vertx-jooq-classic-async</artifactId>
      <version>4.1.0</version>
    </dependency>
      <dependency>
          <groupId>io.github.jklingsporn</groupId>
          <artifactId>vertx-jooq-shared</artifactId>
          <version>4.1.0</version>
      </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <version>1.0</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
      <dependency>
          <groupId>io.github.jklingsporn</groupId>
          <artifactId>vertx-jooq-generate</artifactId>
          <version>4.1.0</version>
      </dependency>
      <dependency>
          <groupId>net.postgis</groupId>
          <artifactId>postgis-jdbc</artifactId>
          <version>2.3.0</version>
      </dependency>
      <dependency>
          <groupId>io.pet</groupId>
          <artifactId>spooch-jooq</artifactId>
          <version>0.4.10</version>
      </dependency>
      <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-hazelcast</artifactId>
          <version>3.6.3</version>
      </dependency>
      <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-service-proxy</artifactId>
          <version>3.6.2</version>
      </dependency>
      <dependency>
          <groupId>com.geoideas</groupId>
          <artifactId>eventx-shared</artifactId>
          <version>0.11.5</version>
      </dependency>
      <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <version>1.12</version>
      </dependency>
  </dependencies>
  <build>
    <plugins>
        <plugin>
            <artifactId>kotlin-maven-plugin</artifactId>
            <groupId>org.jetbrains.kotlin</groupId>
            <version>${kotlin.version}</version>
            <configuration>
                <jvmTarget>1.8</jvmTarget>
            </configuration>
            <executions>
                <execution>
                    <id>compile</id>
                    <goals> <goal>compile</goal> </goals>
                    <configuration>
                        <sourceDirs>
                            <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            <sourceDir>${project.basedir}/src/main/java</sourceDir>
                        </sourceDirs>
                    </configuration>
                </execution>
                <execution>
                    <id>test-compile</id>
                    <goals> <goal>test-compile</goal> </goals>
                    <configuration>
                        <sourceDirs>
                            <sourceDir>${project.basedir}/src/test/java</sourceDir>
                        </sourceDirs>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <executions>
                <!-- Replacing default-compile as it is treated specially by maven -->
                <execution>
                    <id>default-compile</id>
                    <phase>none</phase>
                </execution>
                <!-- Replacing default-testCompile as it is treated specially by maven -->
                <execution>
                    <id>default-testCompile</id>
                    <phase>none</phase>
                </execution>
                <execution>
                    <id>java-compile</id>
                    <phase>compile</phase>
                    <goals> <goal>compile</goal> </goals>
                </execution>
                <execution>
                    <id>java-test-compile</id>
                    <phase>test-compile</phase>
                    <goals> <goal>testCompile</goal> </goals>
                </execution>
            </executions>
        </plugin>
      <plugin>
        <groupId>io.reactiverse</groupId>
        <artifactId>vertx-maven-plugin</artifactId>
        <version>${vertx-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>vmp</id>
            <goals>
              <goal>initialize</goal>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <redeploy>true</redeploy>
          <config>src/main/resources/config/config.json</config>
          <runArgs>
              <runArg>--cluster</runArg>
          </runArgs>
        </configuration>
      </plugin>
      <plugin>
          <!-- Specify the maven code generator plugin -->
          <groupId>org.jooq</groupId>
          <artifactId>jooq-codegen-maven</artifactId>
          <version>3.11.9</version>

          <!-- The plugin should hook into the generate goal -->
          <executions>
              <execution>
                  <goals>
                      <goal>generate</goal>
                  </goals>
              </execution>
          </executions>

          <dependencies>
              <dependency>
                  <groupId>org.postgresql</groupId>
                  <artifactId>postgresql</artifactId>
                  <version>42.2.5</version>
              </dependency>
              <dependency>
                  <groupId>io.github.jklingsporn</groupId>
                  <artifactId>vertx-jooq-generate</artifactId>
                  <version>4.1.0</version>
              </dependency>
              <dependency>
                  <groupId>io.pet</groupId>
                  <artifactId>spooch-jooq</artifactId>
                  <version>0.4.10</version>
              </dependency>
          </dependencies>

          <!-- Specify the plugin configuration.
               The configuration format is the same as for the standalone code generator -->
          <configuration>
              <!-- JDBC connection parameters -->
              <jdbc>
                  <driver>org.postgresql.Driver</driver>
                  <url>jdbc:postgresql://localhost:5432/spooch</url>
                  <user>spooch</user>
                  <password>spooch</password>
              </jdbc>

              <!-- Generator parameters -->
              <generator>
                  <name>io.pet.spooch.jooq.Generator</name>
                  <!-- use 'io.github.jklingsporn.vertx.jooq.generate.classic.ClassicAsyncGuiceVertxGenerator' to enable Guice DI -->
                  <database>
                      <name>org.jooq.meta.postgres.PostgresDatabase</name>
                      <includeTables>true</includeTables>
                      <inputSchema>public</inputSchema>
                      <includes>event|comment|tag|user|eventsource</includes>

                      <forcedTypes>
                          <forcedType>
                              <userType>io.pet.spooch.jooq.types.Point</userType>
                              <converter>io.pet.spooch.jooq.converter.PointConverter</converter>
                              <expression>.*\.location</expression>
                              <types>geometry</types>
                          </forcedType>
                      </forcedTypes>

                  </database>
                  <target>
                      <!-- This is where jOOQ will put your files -->
                      <packageName>io.pet.spooch.database</packageName>
                      <directory>./src/main/java</directory>
                  </target>
                  <generate>
                      <daos>true</daos>
                      <fluentSetters>true</fluentSetters>
                      <javaTimeTypes>true</javaTimeTypes>
                  </generate>
                  <strategy>
                      <name>io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy</name>
                  </strategy>
              </generator>

          </configuration>
      </plugin>
    </plugins>
  </build>
</project>
