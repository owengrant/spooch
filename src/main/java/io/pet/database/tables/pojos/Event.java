/*
 * This file is generated by jOOQ.
 */
package io.pet.database.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Event implements VertxPojo, Serializable {

    private static final long serialVersionUID = 1963600303;

    private Integer   id;
    private String    caption;
    private String    description;
    private Timestamp timestamp;
    private String    location;
    private String    photo;
    private Integer   uid;

    public Event() {}

    public Event(Event value) {
        this.id = value.id;
        this.caption = value.caption;
        this.description = value.description;
        this.timestamp = value.timestamp;
        this.location = value.location;
        this.photo = value.photo;
        this.uid = value.uid;
    }

    public Event(
        Integer   id,
        String    caption,
        String    description,
        Timestamp timestamp,
        String    location,
        String    photo,
        Integer   uid
    ) {
        this.id = id;
        this.caption = caption;
        this.description = description;
        this.timestamp = timestamp;
        this.location = location;
        this.photo = photo;
        this.uid = uid;
    }

    public Integer getId() {
        return this.id;
    }

    public Event setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getCaption() {
        return this.caption;
    }

    public Event setCaption(String caption) {
        this.caption = caption;
        return this;
    }

    public String getDescription() {
        return this.description;
    }

    public Event setDescription(String description) {
        this.description = description;
        return this;
    }

    public Timestamp getTimestamp() {
        return this.timestamp;
    }

    public Event setTimestamp(Timestamp timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    public String getLocation() {
        return this.location;
    }

    public Event setLocation(String location) {
        this.location = location;
        return this;
    }

    public String getPhoto() {
        return this.photo;
    }

    public Event setPhoto(String photo) {
        this.photo = photo;
        return this;
    }

    public Integer getUid() {
        return this.uid;
    }

    public Event setUid(Integer uid) {
        this.uid = uid;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Event (");

        sb.append(id);
        sb.append(", ").append(caption);
        sb.append(", ").append(description);
        sb.append(", ").append(timestamp);
        sb.append(", ").append(location);
        sb.append(", ").append(photo);
        sb.append(", ").append(uid);

        sb.append(")");
        return sb.toString();
    }

    public Event(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public Event fromJson(io.vertx.core.json.JsonObject json) {
        setId(json.getInteger("id"));
        setCaption(json.getString("caption"));
        setDescription(json.getString("description"));
        // Omitting unrecognized type java.sql.Timestamp for column timestamp!
        setLocation(json.getString("location"));
        setPhoto(json.getString("photo"));
        setUid(json.getInteger("uid"));
        return this;
    }


    @Override
    public io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("caption",getCaption());
        json.put("description",getDescription());
        // Omitting unrecognized type java.sql.Timestamp for column timestamp!
        json.put("location",getLocation());
        json.put("photo",getPhoto());
        json.put("uid",getUid());
        return json;
    }

}
