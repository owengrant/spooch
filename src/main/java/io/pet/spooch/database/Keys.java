/*
 * This file is generated by jOOQ.
 */
package io.pet.spooch.database;


import io.pet.spooch.database.tables.Comment;
import io.pet.spooch.database.tables.Event;
import io.pet.spooch.database.tables.Eventsource;
import io.pet.spooch.database.tables.Tag;
import io.pet.spooch.database.tables.User;
import io.pet.spooch.database.tables.records.CommentRecord;
import io.pet.spooch.database.tables.records.EventRecord;
import io.pet.spooch.database.tables.records.EventsourceRecord;
import io.pet.spooch.database.tables.records.TagRecord;
import io.pet.spooch.database.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CommentRecord, Integer> IDENTITY_COMMENT = Identities0.IDENTITY_COMMENT;
    public static final Identity<EventRecord, Integer> IDENTITY_EVENT = Identities0.IDENTITY_EVENT;
    public static final Identity<EventsourceRecord, Integer> IDENTITY_EVENTSOURCE = Identities0.IDENTITY_EVENTSOURCE;
    public static final Identity<TagRecord, Integer> IDENTITY_TAG = Identities0.IDENTITY_TAG;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CommentRecord> COMMENT_PKEY = UniqueKeys0.COMMENT_PKEY;
    public static final UniqueKey<EventRecord> EVENT_PKEY = UniqueKeys0.EVENT_PKEY;
    public static final UniqueKey<EventsourceRecord> EVENTSOURCE_PKEY = UniqueKeys0.EVENTSOURCE_PKEY;
    public static final UniqueKey<EventsourceRecord> EVENTSOURCE_REVISION_KEY = UniqueKeys0.EVENTSOURCE_REVISION_KEY;
    public static final UniqueKey<TagRecord> TAG_PKEY = UniqueKeys0.TAG_PKEY;
    public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;
    public static final UniqueKey<UserRecord> USER_USERNAME_KEY = UniqueKeys0.USER_USERNAME_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentRecord, EventRecord> COMMENT__COMMENT_EID_FKEY = ForeignKeys0.COMMENT__COMMENT_EID_FKEY;
    public static final ForeignKey<CommentRecord, UserRecord> COMMENT__COMMENT_UID_FKEY = ForeignKeys0.COMMENT__COMMENT_UID_FKEY;
    public static final ForeignKey<EventRecord, UserRecord> EVENT__EVENT_UID_FKEY = ForeignKeys0.EVENT__EVENT_UID_FKEY;
    public static final ForeignKey<TagRecord, EventRecord> TAG__TAG_EID_FKEY = ForeignKeys0.TAG__TAG_EID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CommentRecord, Integer> IDENTITY_COMMENT = Internal.createIdentity(Comment.COMMENT, Comment.COMMENT.ID);
        public static Identity<EventRecord, Integer> IDENTITY_EVENT = Internal.createIdentity(Event.EVENT, Event.EVENT.ID);
        public static Identity<EventsourceRecord, Integer> IDENTITY_EVENTSOURCE = Internal.createIdentity(Eventsource.EVENTSOURCE, Eventsource.EVENTSOURCE.ID);
        public static Identity<TagRecord, Integer> IDENTITY_TAG = Internal.createIdentity(Tag.TAG, Tag.TAG.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CommentRecord> COMMENT_PKEY = Internal.createUniqueKey(Comment.COMMENT, "comment_pkey", Comment.COMMENT.ID);
        public static final UniqueKey<EventRecord> EVENT_PKEY = Internal.createUniqueKey(Event.EVENT, "event_pkey", Event.EVENT.ID);
        public static final UniqueKey<EventsourceRecord> EVENTSOURCE_PKEY = Internal.createUniqueKey(Eventsource.EVENTSOURCE, "eventsource_pkey", Eventsource.EVENTSOURCE.ID);
        public static final UniqueKey<EventsourceRecord> EVENTSOURCE_REVISION_KEY = Internal.createUniqueKey(Eventsource.EVENTSOURCE, "eventsource_revision_key", Eventsource.EVENTSOURCE.REVISION);
        public static final UniqueKey<TagRecord> TAG_PKEY = Internal.createUniqueKey(Tag.TAG, "tag_pkey", Tag.TAG.ID);
        public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, "user_pkey", User.USER.ID);
        public static final UniqueKey<UserRecord> USER_USERNAME_KEY = Internal.createUniqueKey(User.USER, "user_username_key", User.USER.USERNAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CommentRecord, EventRecord> COMMENT__COMMENT_EID_FKEY = Internal.createForeignKey(io.pet.spooch.database.Keys.EVENT_PKEY, Comment.COMMENT, "comment__comment_eid_fkey", Comment.COMMENT.EID);
        public static final ForeignKey<CommentRecord, UserRecord> COMMENT__COMMENT_UID_FKEY = Internal.createForeignKey(io.pet.spooch.database.Keys.USER_PKEY, Comment.COMMENT, "comment__comment_uid_fkey", Comment.COMMENT.UID);
        public static final ForeignKey<EventRecord, UserRecord> EVENT__EVENT_UID_FKEY = Internal.createForeignKey(io.pet.spooch.database.Keys.USER_PKEY, Event.EVENT, "event__event_uid_fkey", Event.EVENT.UID);
        public static final ForeignKey<TagRecord, EventRecord> TAG__TAG_EID_FKEY = Internal.createForeignKey(io.pet.spooch.database.Keys.EVENT_PKEY, Tag.TAG, "tag__tag_eid_fkey", Tag.TAG.EID);
    }
}
