/*
 * This file is generated by jOOQ.
 */
package io.pet.spooch.database.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.pet.spooch.database.tables.User;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements VertxPojo, Record7<Integer, String, String, Integer, String, String, Integer> {

    private static final long serialVersionUID = -378344496;

    /**
     * Setter for <code>public.user.id</code>.
     */
    public UserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user.username</code>.
     */
    public UserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user.eventId</code>.
     */
    public UserRecord setEventid(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user.eventId</code>.
     */
    public Integer getEventid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.user.hash</code>.
     */
    public UserRecord setHash(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user.hash</code>.
     */
    public String getHash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user.entityId</code>.
     */
    public UserRecord setEntityid(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user.entityId</code>.
     */
    public String getEntityid() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.user.revision</code>.
     */
    public UserRecord setRevision(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.user.revision</code>.
     */
    public Integer getRevision() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, Integer, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, Integer, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return User.USER.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return User.USER.EVENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return User.USER.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return User.USER.ENTITYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return User.USER.REVISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getEventid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getEntityid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getRevision();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getEventid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getEntityid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getRevision();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(Integer value) {
        setEventid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value5(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value6(String value) {
        setEntityid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value7(Integer value) {
        setRevision(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(Integer value1, String value2, String value3, Integer value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String username, String password, Integer eventid, String hash, String entityid, Integer revision) {
        super(User.USER);

        set(0, id);
        set(1, username);
        set(2, password);
        set(3, eventid);
        set(4, hash);
        set(5, entityid);
        set(6, revision);
    }

    public UserRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public UserRecord fromJson(io.vertx.core.json.JsonObject json) {
        setId(json.getInteger("id"));
        setUsername(json.getString("username"));
        setPassword(json.getString("password"));
        setEventid(json.getInteger("eventId"));
        setHash(json.getString("hash"));
        setEntityid(json.getString("entityId"));
        setRevision(json.getInteger("revision"));
        return this;
    }


    @Override
    public io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("username",getUsername());
        json.put("password",getPassword());
        json.put("eventId",getEventid());
        json.put("hash",getHash());
        json.put("entityId",getEntityid());
        json.put("revision",getRevision());
        return json;
    }

}
